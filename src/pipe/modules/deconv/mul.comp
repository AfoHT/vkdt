#version 460
#extension GL_GOOGLE_include_directive    : enable
#extension GL_EXT_nonuniform_qualifier    : enable

#include "shared.glsl"

layout(local_size_x = DT_LOCAL_SIZE_X, local_size_y = DT_LOCAL_SIZE_Y, local_size_z = 1) in;

layout( // input factor 0
    set = 1, binding = 0
) uniform sampler2D img_f0;

layout( // input factor 1
    set = 1, binding = 1
) uniform sampler2D img_f1;

layout( // output product
    set = 1, binding = 2
) uniform writeonly image2D img_out;

void
main()
{
  ivec2 ipos = ivec2(gl_GlobalInvocationID);
  if(any(greaterThanEqual(ipos, imageSize(img_out)))) return;

  vec4 f0 = texture(img_f0, ipos/vec2(imageSize(img_out)));
  vec4 f1 = texture(img_f1, ipos/vec2(imageSize(img_out)));
  imageStore(img_out, ipos, f0*f1);
}


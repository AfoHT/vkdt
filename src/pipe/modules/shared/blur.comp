#version 460
#extension GL_GOOGLE_include_directive    : enable
#extension GL_EXT_nonuniform_qualifier    : enable
#include "shared.glsl"

layout(local_size_x = DT_LOCAL_SIZE_X, local_size_y = DT_LOCAL_SIZE_Y, local_size_z = 1) in;

layout( // input buffer array
    set = 1, binding = 0
) uniform sampler2D img_in[];

layout( // output buffer array
    set = 1, binding = 1
) uniform writeonly image2D img_out[];

void
main()
{
  ivec2 opos = ivec2(gl_GlobalInvocationID);
  int idx = int(gl_GlobalInvocationID.z);
  if(any(greaterThanEqual(opos, imageSize(img_out[idx])))) return;

  ivec2 ipos = 2*opos;
  vec4 rgb = sample_flower(img_in[idx], (ipos+0.5)/textureSize(img_in[idx], 0));
  imageStore(img_out[idx], opos, rgb);
}


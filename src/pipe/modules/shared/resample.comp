#version 460
#extension GL_GOOGLE_include_directive    : enable
#extension GL_EXT_nonuniform_qualifier    : enable

#include "shared.glsl"

layout(local_size_x = DT_LOCAL_SIZE_X, local_size_y = DT_LOCAL_SIZE_Y, local_size_z = 1) in;

layout( // input f16 buffer rgb
    set = 1, binding = 0
) uniform sampler2D img_in;

layout( // output f16 buffer rgb
    set = 1, binding = 1
) uniform writeonly image2D img_out;

// resample input image to new resolution (determined by region of interest,
// larger or smaller), using a catmull rom interpolation kernel
void
main()
{
  ivec2 opos = ivec2(gl_GlobalInvocationID);
  if(any(greaterThanEqual(opos, imageSize(img_out)))) return;

  vec2 ipos = (opos + vec2(0.5))/ vec2(imageSize(img_out));
  // vec4 rgba = sample_catmull_rom(img_in, ipos); // takes normalised coordinates
  vec4 rgba = sample_soft(img_in, ipos);
  // vec4 rgba = textureLod(img_in, ipos, 0);
  imageStore(img_out, opos, rgba);
}


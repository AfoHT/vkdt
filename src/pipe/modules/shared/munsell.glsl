const int munsell_hdim = 40;
const int munsell_cdim = 21;
#define M_PI   3.14159265358979323846

const float16_t munsell_xy[2*21*40] = {
float16_t(0.31006), float16_t(0.31616), float16_t(0.2821), float16_t(0.2966), float16_t(0.2547), float16_t(0.2757), float16_t(0.2299), float16_t(0.2548), float16_t(0.2067), float16_t(0.2344), float16_t(0.186), float16_t(0.2149), float16_t(0.1666), float16_t(0.1964), float16_t(0.1492), float16_t(0.1797), float16_t(0.1326), float16_t(0.1632), float16_t(0.1203), float16_t(0.1505), float16_t(0.108), float16_t(0.137), float16_t(0.096), float16_t(0.126), float16_t(0.0844868), float16_t(0.115772), float16_t(0.0735334), float16_t(0.106042), float16_t(0.0630653), float16_t(0.0967425), float16_t(0.0530231), float16_t(0.0878216), float16_t(0.0433588), float16_t(0.0792363), float16_t(0.0340327), float16_t(0.0709514), float16_t(0.0250115), float16_t(0.0629374), float16_t(0.0162672), float16_t(0.0551695), float16_t(0.00777575), float16_t(0.0476261), float16_t(0.31006), float16_t(0.31616), float16_t(0.2803), float16_t(0.3), float16_t(0.2511), float16_t(0.2808), float16_t(0.2248), float16_t(0.2612), float16_t(0.2007), float16_t(0.2417), float16_t(0.1792), float16_t(0.223), float16_t(0.1584), float16_t(0.2042), float16_t(0.1404), float16_t(0.1878), float16_t(0.123), float16_t(0.1711), float16_t(0.109), float16_t(0.157), float16_t(0.098), float16_t(0.146), float16_t(0.086593), float16_t(0.136847), float16_t(0.0757406), float16_t(0.128139), float16_t(0.0653691), float16_t(0.119816), float16_t(0.0554197), float16_t(0.111833), float16_t(0.0458446), float16_t(0.10415), float16_t(0.0366046), float16_t(0.0967355), float16_t(0.0276668), float16_t(0.0895637), float16_t(0.0190034), float16_t(0.082612), float16_t(0.0105904), float16_t(0.0758613), float16_t(0.00240746), float16_t(0.0692952), float16_t(0.31006), float16_t(0.31616), float16_t(0.2794), float16_t(0.3032), float16_t(0.2493), float16_t(0.2879), float16_t(0.2215), float16_t(0.2701), float16_t(0.1958), float16_t(0.2519), float16_t(0.1729), float16_t(0.2347), float16_t(0.1505), float16_t(0.2172), float16_t(0.132), float16_t(0.2021), float16_t(0.1132), float16_t(0.1863), float16_t(0.098), float16_t(0.172), float16_t(0.086), float16_t(0.16), float16_t(0.0730982), float16_t(0.151008), float16_t(0.0608634), float16_t(0.142481), float16_t(0.0492019), float16_t(0.134353), float16_t(0.0380398), float16_t(0.126574), float16_t(0.027318), float16_t(0.119101), float16_t(0.0169882), float16_t(0.111902), float16_t(0.00701037), float16_t(0.104948), float16_t(-0.00264931), float16_t(0.0982153), float16_t(-0.0120194), float16_t(0.0916848), float16_t(-0.0211245), float16_t(0.0853389), float16_t(0.31006), float16_t(0.31616), float16_t(0.2791), float16_t(0.3071), float16_t(0.2492), float16_t(0.2954), float16_t(0.221), float16_t(0.2823), float16_t(0.1947), float16_t(0.2687), float16_t(0.1697), float16_t(0.2549), float16_t(0.1461), float16_t(0.2406), float16_t(0.1283), float16_t(0.2292), float16_t(0.109), float16_t(0.2166), float16_t(0.094), float16_t(0.206), float16_t(0.077), float16_t(0.194), float16_t(0.0600731), float16_t(0.185128), float16_t(0.0442218), float16_t(0.176819), float16_t(0.029264), float16_t(0.168979), float16_t(0.0150636), float16_t(0.161536), float16_t(0.00151607), float16_t(0.154435), float16_t(-0.0114611), float16_t(0.147633), float16_t(-0.0239345), float16_t(0.141095), float16_t(-0.0359585), float16_t(0.134792), float16_t(-0.0475784), float16_t(0.128701), float16_t(-0.0588326), float16_t(0.122802), float16_t(0.31006), float16_t(0.31616), float16_t(0.2796), float16_t(0.3111), float16_t(0.2512), float16_t(0.304), float16_t(0.2234), float16_t(0.2952), float16_t(0.197), float16_t(0.286), float16_t(0.1716), float16_t(0.276), float16_t(0.1485), float16_t(0.2662), float16_t(0.1308), float16_t(0.2582), float16_t(0.1108), float16_t(0.2489), float16_t(0.093), float16_t(0.24), float16_t(0.079), float16_t(0.232), float16_t(0.066), float16_t(0.226), float16_t(0.058), float16_t(0.221), float16_t(0.049639), float16_t(0.217843), float16_t(0.0415382), float16_t(0.214785), float16_t(0.0336747), float16_t(0.211817), float16_t(0.0260289), float16_t(0.20893), float16_t(0.0185836), float16_t(0.206119), float16_t(0.0113237), float16_t(0.203378), float16_t(0.00423616), float16_t(0.200703), float16_t(-0.00269082), float16_t(0.198087), float16_t(0.31006), float16_t(0.31616), float16_t(0.2812), float16_t(0.3161), float16_t(0.255), float16_t(0.315), float16_t(0.2292), float16_t(0.3125), float16_t(0.203), float16_t(0.3082), float16_t(0.1776), float16_t(0.3032), float16_t(0.1537), float16_t(0.2976), float16_t(0.1364), float16_t(0.2932), float16_t(0.1167), float16_t(0.288), float16_t(0.0982), float16_t(0.2828), float16_t(0.083), float16_t(0.278), float16_t(0.071), float16_t(0.274), float16_t(0.062), float16_t(0.27), float16_t(0.055), float16_t(0.268), float16_t(0.0480708), float16_t(0.266692), float16_t(0.0413202), float16_t(0.265417), float16_t(0.034735), float16_t(0.264174), float16_t(0.0283037), float16_t(0.262959), float16_t(0.022016), float16_t(0.261772), float16_t(0.0158627), float16_t(0.26061), float16_t(0.00983542), float16_t(0.259472), float16_t(0.31006), float16_t(0.31616), float16_t(0.2841), float16_t(0.321), float16_t(0.2591), float16_t(0.3246), float16_t(0.236), float16_t(0.327), float16_t(0.21), float16_t(0.328), float16_t(0.185), float16_t(0.328), float16_t(0.1614), float16_t(0.328), float16_t(0.1448), float16_t(0.3275), float16_t(0.1243), float16_t(0.3261), float16_t(0.1046), float16_t(0.3244), float16_t(0.0904), float16_t(0.3231), float16_t(0.0781), float16_t(0.3211), float16_t(0.067), float16_t(0.32), float16_t(0.058), float16_t(0.318), float16_t(0.05), float16_t(0.317), float16_t(0.042), float16_t(0.316), float16_t(0.0342332), float16_t(0.315995), float16_t(0.0266791), float16_t(0.315991), float16_t(0.0193213), float16_t(0.315986), float16_t(0.0121451), float16_t(0.315982), float16_t(0.00513774), float16_t(0.315978), float16_t(0.31006), float16_t(0.31616), float16_t(0.288), float16_t(0.327), float16_t(0.2659), float16_t(0.3369), float16_t(0.2448), float16_t(0.3452), float16_t(0.2205), float16_t(0.3537), float16_t(0.198), float16_t(0.3606), float16_t(0.1735), float16_t(0.3668), float16_t(0.1559), float16_t(0.3708), float16_t(0.1348), float16_t(0.375), float16_t(0.1165), float16_t(0.3785), float16_t(0.1005), float16_t(0.3814), float16_t(0.0861), float16_t(0.3832), float16_t(0.0738), float16_t(0.3851), float16_t(0.064), float16_t(0.386), float16_t(0.053), float16_t(0.388), float16_t(0.042), float16_t(0.389), float16_t(0.027), float16_t(0.391), float16_t(0.0132003), float16_t(0.394649), float16_t(1.41859e-05), float16_t(0.398135), float16_t(-0.0126335), float16_t(0.401479), float16_t(-0.0248039), float16_t(0.404697), float16_t(0.31006), float16_t(0.31616), float16_t(0.291), float16_t(0.331), float16_t(0.2711), float16_t(0.3455), float16_t(0.2519), float16_t(0.3587), float16_t(0.2297), float16_t(0.373), float16_t(0.2095), float16_t(0.3853), float16_t(0.1852), float16_t(0.3992), float16_t(0.1671), float16_t(0.4089), float16_t(0.1469), float16_t(0.4192), float16_t(0.1275), float16_t(0.4288), float16_t(0.112), float16_t(0.436), float16_t(0.0958), float16_t(0.4428), float16_t(0.0811), float16_t(0.4491), float16_t(0.069), float16_t(0.4542), float16_t(0.0572), float16_t(0.459), float16_t(0.041), float16_t(0.466), float16_t(0.023), float16_t(0.474), float16_t(0.00677833), float16_t(0.48292), float16_t(-0.00861871), float16_t(0.491386), float16_t(-0.0233054), float16_t(0.499461), float16_t(-0.0373717), float16_t(0.507195), float16_t(0.31006), float16_t(0.31616), float16_t(0.2945), float16_t(0.3355), float16_t(0.2775), float16_t(0.3545), float16_t(0.2598), float16_t(0.3724), float16_t(0.2395), float16_t(0.3915), float16_t(0.22), float16_t(0.4082), float16_t(0.1964), float16_t(0.4271), float16_t(0.1776), float16_t(0.4415), float16_t(0.1571), float16_t(0.4561), float16_t(0.1372), float16_t(0.4705), float16_t(0.1212), float16_t(0.4817), float16_t(0.105), float16_t(0.4927), float16_t(0.0878), float16_t(0.5039), float16_t(0.073), float16_t(0.5131), float16_t(0.0585), float16_t(0.5224), float16_t(0.041), float16_t(0.532), float16_t(0.021), float16_t(0.542), float16_t(0.00472459), float16_t(0.554716), float16_t(-0.0107261), float16_t(0.566787), float16_t(-0.0254661), float16_t(0.578304), float16_t(-0.0395853), float16_t(0.589335), float16_t(0.31006), float16_t(0.31616), float16_t(0.2978), float16_t(0.3392), float16_t(0.2841), float16_t(0.3628), float16_t(0.269), float16_t(0.386), float16_t(0.2511), float16_t(0.4107), float16_t(0.2329), float16_t(0.4331), float16_t(0.2104), float16_t(0.4578), float16_t(0.1912), float16_t(0.4773), float16_t(0.1695), float16_t(0.4981), float16_t(0.1489), float16_t(0.5171), float16_t(0.1318), float16_t(0.5321), float16_t(0.1144), float16_t(0.5463), float16_t(0.0953), float16_t(0.5628), float16_t(0.0784), float16_t(0.5761), float16_t(0.0609), float16_t(0.5898), float16_t(0.04), float16_t(0.605), float16_t(0.02), float16_t(0.622), float16_t(0.00309619), float16_t(0.639823), float16_t(-0.0129242), float16_t(0.656715), float16_t(-0.0281866), float16_t(0.672808), float16_t(-0.0427895), float16_t(0.688205), float16_t(0.31006), float16_t(0.31616), float16_t(0.303), float16_t(0.3445), float16_t(0.2943), float16_t(0.3735), float16_t(0.2841), float16_t(0.4045), float16_t(0.271), float16_t(0.438), float16_t(0.2565), float16_t(0.4705), float16_t(0.2385), float16_t(0.5071), float16_t(0.2211), float16_t(0.5411), float16_t(0.2005), float16_t(0.5759), float16_t(0.1782), float16_t(0.6095), float16_t(0.1579), float16_t(0.6392), float16_t(0.1377), float16_t(0.6674), float16_t(0.1188), float16_t(0.6918), float16_t(0.0992), float16_t(0.7155), float16_t(0.0794), float16_t(0.7385), float16_t(0.055), float16_t(0.766), float16_t(0.034), float16_t(0.789), float16_t(0.0194757), float16_t(0.813877), float16_t(0.00564358), float16_t(0.837569), float16_t(-0.00758681), float16_t(0.860231), float16_t(-0.0202877), float16_t(0.881985), float16_t(0.31006), float16_t(0.31616), float16_t(0.311), float16_t(0.3508), float16_t(0.3111), float16_t(0.3881), float16_t(0.3108), float16_t(0.4301), float16_t(0.308), float16_t(0.4759), float16_t(0.3028), float16_t(0.5237), float16_t(0.294), float16_t(0.5751), float16_t(0.2838), float16_t(0.6208), float16_t(0.2702), float16_t(0.67), float16_t(0.2549), float16_t(0.7179), float16_t(0.237), float16_t(0.767), float16_t(0.221), float16_t(0.808), float16_t(0.202), float16_t(0.852), float16_t(0.179), float16_t(0.898), float16_t(0.154), float16_t(0.949), float16_t(0.125), float16_t(1), float16_t(0.097), float16_t(1.048), float16_t(0.0829588), float16_t(1.09623), float16_t(0.0697366), float16_t(1.14165), float16_t(0.0572048), float16_t(1.18469), float16_t(0.0452655), float16_t(1.2257), float16_t(0.31006), float16_t(0.31616), float16_t(0.3188), float16_t(0.356), float16_t(0.3274), float16_t(0.3994), float16_t(0.3354), float16_t(0.4483), float16_t(0.3412), float16_t(0.4976), float16_t(0.3451), float16_t(0.549), float16_t(0.345), float16_t(0.5949), float16_t(0.3429), float16_t(0.6335), float16_t(0.341), float16_t(0.666), float16_t(0.339), float16_t(0.697), float16_t(0.333), float16_t(0.733), float16_t(0.334799), float16_t(0.765687), float16_t(0.336476), float16_t(0.796154), float16_t(0.338052), float16_t(0.824799), float16_t(0.339544), float16_t(0.851915), float16_t(0.340965), float16_t(0.877723), float16_t(0.342322), float16_t(0.902395), float16_t(0.343625), float16_t(0.926071), float16_t(0.34488), float16_t(0.948861), float16_t(0.34609), float16_t(0.970859), float16_t(0.347261), float16_t(0.992141), float16_t(0.31006), float16_t(0.31616), float16_t(0.3289), float16_t(0.3612), float16_t(0.3482), float16_t(0.4097), float16_t(0.3663), float16_t(0.4614), float16_t(0.3815), float16_t(0.5093), float16_t(0.3928), float16_t(0.5485), float16_t(0.4011), float16_t(0.5802), float16_t(0.407), float16_t(0.604), float16_t(0.41), float16_t(0.626), float16_t(0.41628), float16_t(0.645471), float16_t(0.42221), float16_t(0.663853), float16_t(0.427841), float16_t(0.681311), float16_t(0.433215), float16_t(0.697972), float16_t(0.438364), float16_t(0.713935), float16_t(0.443314), float16_t(0.729282), float16_t(0.448087), float16_t(0.744079), float16_t(0.4527), float16_t(0.758381), float16_t(0.457169), float16_t(0.772235), float16_t(0.461505), float16_t(0.78568), float16_t(0.465721), float16_t(0.798751), float16_t(0.469826), float16_t(0.811477), float16_t(0.31006), float16_t(0.31616), float16_t(0.3352), float16_t(0.3636), float16_t(0.3621), float16_t(0.4143), float16_t(0.3879), float16_t(0.4646), float16_t(0.4088), float16_t(0.5068), float16_t(0.4224), float16_t(0.5369), float16_t(0.4333), float16_t(0.5602), float16_t(0.44), float16_t(0.58), float16_t(0.448547), float16_t(0.597353), float16_t(0.456595), float16_t(0.613697), float16_t(0.464225), float16_t(0.629187), float16_t(0.471494), float16_t(0.643947), float16_t(0.478449), float16_t(0.65807), float16_t(0.485129), float16_t(0.671633), float16_t(0.491563), float16_t(0.684696), float16_t(0.497776), float16_t(0.697313), float16_t(0.50379), float16_t(0.709524), float16_t(0.509623), float16_t(0.721368), float16_t(0.515291), float16_t(0.732876), float16_t(0.520806), float16_t(0.744074), float16_t(0.52618), float16_t(0.754986), float16_t(0.31006), float16_t(0.31616), float16_t(0.3422), float16_t(0.3648), float16_t(0.3762), float16_t(0.4158), float16_t(0.4072), float16_t(0.4621), float16_t(0.4307), float16_t(0.4967), float16_t(0.4468), float16_t(0.5209), float16_t(0.459), float16_t(0.539), float16_t(0.469), float16_t(0.554), float16_t(0.478422), float16_t(0.568099), float16_t(0.487343), float16_t(0.581449), float16_t(0.495837), float16_t(0.594159), float16_t(0.503959), float16_t(0.606313), float16_t(0.511754), float16_t(0.617978), float16_t(0.519259), float16_t(0.629209), float16_t(0.526504), float16_t(0.64005), float16_t(0.533514), float16_t(0.65054), float16_t(0.540311), float16_t(0.660711), float16_t(0.546913), float16_t(0.67059), float16_t(0.553336), float16_t(0.680201), float16_t(0.559593), float16_t(0.689565), float16_t(0.565697), float16_t(0.698699), float16_t(0.31006), float16_t(0.31616), float16_t(0.347), float16_t(0.364), float16_t(0.385), float16_t(0.412), float16_t(0.4199), float16_t(0.4551), float16_t(0.445), float16_t(0.485), float16_t(0.4632), float16_t(0.5057), float16_t(0.4767), float16_t(0.5208), float16_t(0.489), float16_t(0.535), float16_t(0.500145), float16_t(0.54863), float16_t(0.510671), float16_t(0.561504), float16_t(0.520673), float16_t(0.573735), float16_t(0.53022), float16_t(0.585411), float16_t(0.53937), float16_t(0.596602), float16_t(0.548169), float16_t(0.607363), float16_t(0.556654), float16_t(0.61774), float16_t(0.564857), float16_t(0.627771), float16_t(0.572803), float16_t(0.63749), float16_t(0.580517), float16_t(0.646923), float16_t(0.588016), float16_t(0.656095), float16_t(0.595318), float16_t(0.665025), float16_t(0.602438), float16_t(0.673733), float16_t(0.31006), float16_t(0.31616), float16_t(0.35), float16_t(0.362), float16_t(0.3915), float16_t(0.4057), float16_t(0.4302), float16_t(0.4435), float16_t(0.4579), float16_t(0.4692), float16_t(0.4777), float16_t(0.4876), float16_t(0.4932), float16_t(0.5019), float16_t(0.507), float16_t(0.512), float16_t(0.518292), float16_t(0.523229), float16_t(0.529002), float16_t(0.533879), float16_t(0.539212), float16_t(0.544032), float16_t(0.548986), float16_t(0.553751), float16_t(0.558375), float16_t(0.563088), float16_t(0.567423), float16_t(0.572085), float16_t(0.576163), float16_t(0.580776), float16_t(0.584624), float16_t(0.589191), float16_t(0.592833), float16_t(0.597354), float16_t(0.60081), float16_t(0.605286), float16_t(0.608574), float16_t(0.613007), float16_t(0.616141), float16_t(0.620532), float16_t(0.623526), float16_t(0.627875), float16_t(0.31006), float16_t(0.31616), float16_t(0.3534), float16_t(0.357), float16_t(0.3968), float16_t(0.3954), float16_t(0.438), float16_t(0.4292), float16_t(0.4685), float16_t(0.4524), float16_t(0.4905), float16_t(0.4683), float16_t(0.5082), float16_t(0.4812), float16_t(0.523), float16_t(0.491), float16_t(0.535819), float16_t(0.501525), float16_t(0.547948), float16_t(0.511484), float16_t(0.559488), float16_t(0.520959), float16_t(0.570517), float16_t(0.530015), float16_t(0.581098), float16_t(0.538702), float16_t(0.59128), float16_t(0.547063), float16_t(0.601107), float16_t(0.555132), float16_t(0.610613), float16_t(0.562937), float16_t(0.619827), float16_t(0.570503), float16_t(0.628775), float16_t(0.577849), float16_t(0.637478), float16_t(0.584996), float16_t(0.645956), float16_t(0.591957), float16_t(0.654226), float16_t(0.598746), float16_t(0.31006), float16_t(0.31616), float16_t(0.3546), float16_t(0.3514), float16_t(0.3995), float16_t(0.384), float16_t(0.4428), float16_t(0.4128), float16_t(0.477), float16_t(0.4338), float16_t(0.5025), float16_t(0.4489), float16_t(0.5211), float16_t(0.46), float16_t(0.539), float16_t(0.468), float16_t(0.552), float16_t(0.477), float16_t(0.564484), float16_t(0.4853), float16_t(0.576384), float16_t(0.493211), float16_t(0.587775), float16_t(0.500783), float16_t(0.598716), float16_t(0.508057), float16_t(0.609258), float16_t(0.515064), float16_t(0.61944), float16_t(0.521834), float16_t(0.629298), float16_t(0.528387), float16_t(0.638861), float16_t(0.534744), float16_t(0.648153), float16_t(0.540922), float16_t(0.657196), float16_t(0.546934), float16_t(0.66601), float16_t(0.552793), float16_t(0.674611), float16_t(0.558511), float16_t(0.31006), float16_t(0.31616), float16_t(0.354), float16_t(0.3445), float16_t(0.3991), float16_t(0.3714), float16_t(0.444), float16_t(0.3954), float16_t(0.482), float16_t(0.4141), float16_t(0.5108), float16_t(0.4276), float16_t(0.5335), float16_t(0.4378), float16_t(0.5506), float16_t(0.445), float16_t(0.568), float16_t(0.453), float16_t(0.583849), float16_t(0.461408), float16_t(0.598829), float16_t(0.469355), float16_t(0.613069), float16_t(0.47691), float16_t(0.62667), float16_t(0.484125), float16_t(0.63971), float16_t(0.491043), float16_t(0.652254), float16_t(0.497698), float16_t(0.664353), float16_t(0.504116), float16_t(0.676053), float16_t(0.510323), float16_t(0.68739), float16_t(0.516338), float16_t(0.698397), float16_t(0.522177), float16_t(0.7091), float16_t(0.527855), float16_t(0.719523), float16_t(0.533385), float16_t(0.31006), float16_t(0.31616), float16_t(0.353), float16_t(0.3395), float16_t(0.3968), float16_t(0.3614), float16_t(0.442), float16_t(0.3808), float16_t(0.483), float16_t(0.396), float16_t(0.5161), float16_t(0.4064), float16_t(0.5422), float16_t(0.4141), float16_t(0.5642), float16_t(0.4201), float16_t(0.584), float16_t(0.425), float16_t(0.601), float16_t(0.429), float16_t(0.616269), float16_t(0.434922), float16_t(0.630813), float16_t(0.440563), float16_t(0.644724), float16_t(0.445958), float16_t(0.658081), float16_t(0.451139), float16_t(0.670943), float16_t(0.456127), float16_t(0.683362), float16_t(0.460944), float16_t(0.695382), float16_t(0.465606), float16_t(0.707037), float16_t(0.470126), float16_t(0.71836), float16_t(0.474518), float16_t(0.729377), float16_t(0.478791), float16_t(0.740112), float16_t(0.482954), float16_t(0.31006), float16_t(0.31616), float16_t(0.3506), float16_t(0.3337), float16_t(0.3925), float16_t(0.3494), float16_t(0.4365), float16_t(0.364), float16_t(0.4795), float16_t(0.3758), float16_t(0.5175), float16_t(0.3844), float16_t(0.5482), float16_t(0.3909), float16_t(0.5731), float16_t(0.3953), float16_t(0.5933), float16_t(0.3989), float16_t(0.617), float16_t(0.402), float16_t(0.636), float16_t(0.406), float16_t(0.653667), float16_t(0.41087), float16_t(0.670469), float16_t(0.415501), float16_t(0.686521), float16_t(0.419925), float16_t(0.701917), float16_t(0.424169), float16_t(0.71673), float16_t(0.428252), float16_t(0.731022), float16_t(0.432191), float16_t(0.744845), float16_t(0.436001), float16_t(0.758242), float16_t(0.439694), float16_t(0.771249), float16_t(0.443279), float16_t(0.7839), float16_t(0.446766), float16_t(0.31006), float16_t(0.31616), float16_t(0.3465), float16_t(0.3278), float16_t(0.3879), float16_t(0.3398), float16_t(0.4299), float16_t(0.3499), float16_t(0.4713), float16_t(0.3575), float16_t(0.5113), float16_t(0.363), float16_t(0.5481), float16_t(0.366), float16_t(0.5771), float16_t(0.3664), float16_t(0.6037), float16_t(0.3657), float16_t(0.6297), float16_t(0.3642), float16_t(0.655), float16_t(0.361), float16_t(0.68), float16_t(0.357), float16_t(0.702), float16_t(0.354), float16_t(0.721), float16_t(0.35), float16_t(0.738708), float16_t(0.351458), float16_t(0.755712), float16_t(0.352858), float16_t(0.772092), float16_t(0.354207), float16_t(0.78791), float16_t(0.35551), float16_t(0.803221), float16_t(0.356771), float16_t(0.818071), float16_t(0.357994), float16_t(0.832498), float16_t(0.359182), float16_t(0.31006), float16_t(0.31616), float16_t(0.3425), float16_t(0.3229), float16_t(0.3806), float16_t(0.3294), float16_t(0.418), float16_t(0.3348), float16_t(0.4563), float16_t(0.3387), float16_t(0.4927), float16_t(0.3399), float16_t(0.528), float16_t(0.3389), float16_t(0.559), float16_t(0.337), float16_t(0.5901), float16_t(0.3331), float16_t(0.6161), float16_t(0.3277), float16_t(0.6388), float16_t(0.3216), float16_t(0.661), float16_t(0.317), float16_t(0.68), float16_t(0.312), float16_t(0.692), float16_t(0.307), float16_t(0.708), float16_t(0.302), float16_t(0.723503), float16_t(0.301448), float16_t(0.738445), float16_t(0.300917), float16_t(0.752883), float16_t(0.300403), float16_t(0.766865), float16_t(0.299905), float16_t(0.780432), float16_t(0.299423), float16_t(0.793618), float16_t(0.298953), float16_t(0.31006), float16_t(0.31616), float16_t(0.3392), float16_t(0.3192), float16_t(0.374), float16_t(0.322), float16_t(0.4078), float16_t(0.3238), float16_t(0.4413), float16_t(0.324), float16_t(0.4747), float16_t(0.3227), float16_t(0.5071), float16_t(0.3194), float16_t(0.5341), float16_t(0.3158), float16_t(0.5637), float16_t(0.3102), float16_t(0.5918), float16_t(0.3038), float16_t(0.6142), float16_t(0.297), float16_t(0.634), float16_t(0.29), float16_t(0.648), float16_t(0.284), float16_t(0.662), float16_t(0.279), float16_t(0.674), float16_t(0.274), float16_t(0.685986), float16_t(0.272611), float16_t(0.697602), float16_t(0.271266), float16_t(0.708879), float16_t(0.269959), float16_t(0.719847), float16_t(0.268689), float16_t(0.730528), float16_t(0.267452), float16_t(0.740944), float16_t(0.266245), float16_t(0.31006), float16_t(0.31616), float16_t(0.336), float16_t(0.3158), float16_t(0.366), float16_t(0.3148), float16_t(0.396), float16_t(0.313), float16_t(0.4252), float16_t(0.3101), float16_t(0.4533), float16_t(0.3058), float16_t(0.482), float16_t(0.3002), float16_t(0.5047), float16_t(0.295), float16_t(0.53), float16_t(0.288), float16_t(0.554), float16_t(0.2804), float16_t(0.5784), float16_t(0.2719), float16_t(0.593), float16_t(0.265), float16_t(0.607), float16_t(0.259), float16_t(0.62), float16_t(0.253), float16_t(0.631), float16_t(0.248), float16_t(0.642131), float16_t(0.245636), float16_t(0.6529), float16_t(0.243349), float16_t(0.663341), float16_t(0.241131), float16_t(0.673483), float16_t(0.238978), float16_t(0.683349), float16_t(0.236882), float16_t(0.692961), float16_t(0.234841), float16_t(0.31006), float16_t(0.31616), float16_t(0.3332), float16_t(0.3131), float16_t(0.3594), float16_t(0.309), float16_t(0.3851), float16_t(0.3039), float16_t(0.4105), float16_t(0.298), float16_t(0.4332), float16_t(0.2918), float16_t(0.4579), float16_t(0.2841), float16_t(0.4767), float16_t(0.2776), float16_t(0.4986), float16_t(0.2695), float16_t(0.5185), float16_t(0.262), float16_t(0.5396), float16_t(0.2535), float16_t(0.554), float16_t(0.246), float16_t(0.57), float16_t(0.24), float16_t(0.582), float16_t(0.234), float16_t(0.593), float16_t(0.229), float16_t(0.604004), float16_t(0.22561), float16_t(0.61461), float16_t(0.222343), float16_t(0.624859), float16_t(0.219186), float16_t(0.634785), float16_t(0.216128), float16_t(0.644417), float16_t(0.213161), float16_t(0.653778), float16_t(0.210277), float16_t(0.31006), float16_t(0.31616), float16_t(0.3296), float16_t(0.3098), float16_t(0.3515), float16_t(0.3024), float16_t(0.3726), float16_t(0.2941), float16_t(0.3932), float16_t(0.2852), float16_t(0.4108), float16_t(0.2773), float16_t(0.4303), float16_t(0.2675), float16_t(0.4454), float16_t(0.2596), float16_t(0.4617), float16_t(0.2506), float16_t(0.4761), float16_t(0.2421), float16_t(0.4915), float16_t(0.233), float16_t(0.5045), float16_t(0.2248), float16_t(0.517), float16_t(0.217), float16_t(0.526), float16_t(0.21), float16_t(0.536), float16_t(0.204), float16_t(0.546), float16_t(0.197), float16_t(0.556308), float16_t(0.191794), float16_t(0.566201), float16_t(0.186798), float16_t(0.575726), float16_t(0.181987), float16_t(0.584921), float16_t(0.177343), float16_t(0.593819), float16_t(0.172849), float16_t(0.31006), float16_t(0.31616), float16_t(0.3256), float16_t(0.3065), float16_t(0.3421), float16_t(0.2954), float16_t(0.3585), float16_t(0.2842), float16_t(0.3748), float16_t(0.2729), float16_t(0.388), float16_t(0.263), float16_t(0.4022), float16_t(0.2523), float16_t(0.4142), float16_t(0.2428), float16_t(0.4261), float16_t(0.2331), float16_t(0.4372), float16_t(0.2242), float16_t(0.4484), float16_t(0.215), float16_t(0.4581), float16_t(0.2068), float16_t(0.4683), float16_t(0.1978), float16_t(0.476), float16_t(0.19), float16_t(0.483), float16_t(0.183), float16_t(0.491), float16_t(0.176), float16_t(0.498), float16_t(0.169), float16_t(0.505429), float16_t(0.163183), float16_t(0.512585), float16_t(0.157579), float16_t(0.519497), float16_t(0.152167), float16_t(0.526189), float16_t(0.146928), float16_t(0.31006), float16_t(0.31616), float16_t(0.3199), float16_t(0.3019), float16_t(0.3298), float16_t(0.2869), float16_t(0.3396), float16_t(0.2718), float16_t(0.349), float16_t(0.257), float16_t(0.356), float16_t(0.2452), float16_t(0.3635), float16_t(0.2325), float16_t(0.3703), float16_t(0.2211), float16_t(0.3763), float16_t(0.2108), float16_t(0.3821), float16_t(0.2007), float16_t(0.3873), float16_t(0.1909), float16_t(0.3924), float16_t(0.1814), float16_t(0.3965), float16_t(0.1738), float16_t(0.4011), float16_t(0.1652), float16_t(0.405), float16_t(0.157), float16_t(0.409), float16_t(0.149), float16_t(0.413), float16_t(0.142), float16_t(0.416), float16_t(0.135), float16_t(0.421), float16_t(0.126), float16_t(0.425955), float16_t(0.117507), float16_t(0.430707), float16_t(0.109362), float16_t(0.31006), float16_t(0.31616), float16_t(0.3148), float16_t(0.2986), float16_t(0.3198), float16_t(0.2807), float16_t(0.3243), float16_t(0.263), float16_t(0.328), float16_t(0.2464), float16_t(0.3308), float16_t(0.2328), float16_t(0.3335), float16_t(0.2187), float16_t(0.336), float16_t(0.2066), float16_t(0.3382), float16_t(0.1951), float16_t(0.3401), float16_t(0.184), float16_t(0.3422), float16_t(0.1735), float16_t(0.3437), float16_t(0.1644), float16_t(0.345), float16_t(0.1555), float16_t(0.3468), float16_t(0.146), float16_t(0.3478), float16_t(0.1388), float16_t(0.349), float16_t(0.1308), float16_t(0.35), float16_t(0.124), float16_t(0.351), float16_t(0.115), float16_t(0.352), float16_t(0.107), float16_t(0.353), float16_t(0.102), float16_t(0.354), float16_t(0.096), float16_t(0.31006), float16_t(0.31616), float16_t(0.3103), float16_t(0.2959), float16_t(0.31), float16_t(0.275), float16_t(0.3093), float16_t(0.2555), float16_t(0.3087), float16_t(0.2375), float16_t(0.308), float16_t(0.223), float16_t(0.3071), float16_t(0.208), float16_t(0.3068), float16_t(0.1951), float16_t(0.306), float16_t(0.183), float16_t(0.3052), float16_t(0.1711), float16_t(0.3042), float16_t(0.1606), float16_t(0.3038), float16_t(0.15), float16_t(0.303), float16_t(0.1423), float16_t(0.3022), float16_t(0.1331), float16_t(0.3018), float16_t(0.1253), float16_t(0.301), float16_t(0.117), float16_t(0.3), float16_t(0.108), float16_t(0.3), float16_t(0.1), float16_t(0.299), float16_t(0.093), float16_t(0.298), float16_t(0.088), float16_t(0.298), float16_t(0.081), float16_t(0.31006), float16_t(0.31616), float16_t(0.3045), float16_t(0.2928), float16_t(0.2986), float16_t(0.2699), float16_t(0.2932), float16_t(0.2487), float16_t(0.2885), float16_t(0.2296), float16_t(0.2845), float16_t(0.2137), float16_t(0.2806), float16_t(0.1977), float16_t(0.2775), float16_t(0.1847), float16_t(0.2744), float16_t(0.1718), float16_t(0.2718), float16_t(0.1604), float16_t(0.2694), float16_t(0.1499), float16_t(0.2673), float16_t(0.1398), float16_t(0.2652), float16_t(0.1304), float16_t(0.2635), float16_t(0.1224), float16_t(0.2618), float16_t(0.1135), float16_t(0.259), float16_t(0.105), float16_t(0.256), float16_t(0.096), float16_t(0.255), float16_t(0.088), float16_t(0.253), float16_t(0.081), float16_t(0.252), float16_t(0.075), float16_t(0.251), float16_t(0.069), float16_t(0.31006), float16_t(0.31616), float16_t(0.3), float16_t(0.2912), float16_t(0.2898), float16_t(0.2667), float16_t(0.2806), float16_t(0.2444), float16_t(0.2728), float16_t(0.224), float16_t(0.2665), float16_t(0.2075), float16_t(0.2608), float16_t(0.1913), float16_t(0.256), float16_t(0.1774), float16_t(0.2515), float16_t(0.1644), float16_t(0.2476), float16_t(0.1532), float16_t(0.2438), float16_t(0.1419), float16_t(0.2402), float16_t(0.1315), float16_t(0.2372), float16_t(0.1223), float16_t(0.2348), float16_t(0.114), float16_t(0.231), float16_t(0.104), float16_t(0.229), float16_t(0.097), float16_t(0.226), float16_t(0.088), float16_t(0.223), float16_t(0.08), float16_t(0.221), float16_t(0.072), float16_t(0.219), float16_t(0.066), float16_t(0.216888), float16_t(0.0601971), float16_t(0.31006), float16_t(0.31616), float16_t(0.2959), float16_t(0.2905), float16_t(0.2821), float16_t(0.2659), float16_t(0.2686), float16_t(0.2412), float16_t(0.2572), float16_t(0.2211), float16_t(0.2478), float16_t(0.203), float16_t(0.2384), float16_t(0.1857), float16_t(0.2299), float16_t(0.1698), float16_t(0.2224), float16_t(0.1555), float16_t(0.2174), float16_t(0.1444), float16_t(0.2121), float16_t(0.1329), float16_t(0.2082), float16_t(0.1225), float16_t(0.204), float16_t(0.113), float16_t(0.2), float16_t(0.103), float16_t(0.197), float16_t(0.095), float16_t(0.193), float16_t(0.086), float16_t(0.189), float16_t(0.078), float16_t(0.186), float16_t(0.071), float16_t(0.183), float16_t(0.063), float16_t(0.179301), float16_t(0.0556294), float16_t(0.175703), float16_t(0.0484617), float16_t(0.31006), float16_t(0.31616), float16_t(0.2918), float16_t(0.2908), float16_t(0.2739), float16_t(0.2666), float16_t(0.2563), float16_t(0.2417), float16_t(0.2417), float16_t(0.2204), float16_t(0.2285), float16_t(0.202), float16_t(0.2157), float16_t(0.183), float16_t(0.2042), float16_t(0.1661), float16_t(0.1945), float16_t(0.1511), float16_t(0.1862), float16_t(0.1365), float16_t(0.1794), float16_t(0.1239), float16_t(0.175), float16_t(0.114), float16_t(0.17), float16_t(0.103), float16_t(0.165), float16_t(0.094), float16_t(0.162), float16_t(0.086), float16_t(0.158), float16_t(0.078), float16_t(0.154), float16_t(0.07), float16_t(0.15), float16_t(0.062), float16_t(0.145394), float16_t(0.054686), float16_t(0.140913), float16_t(0.0475712), float16_t(0.136548), float16_t(0.04064), float16_t(0.31006), float16_t(0.31616), float16_t(0.2882), float16_t(0.2923), float16_t(0.2662), float16_t(0.2687), float16_t(0.2447), float16_t(0.2449), float16_t(0.2255), float16_t(0.2239), float16_t(0.208), float16_t(0.2041), float16_t(0.1918), float16_t(0.1858), float16_t(0.1773), float16_t(0.1689), float16_t(0.1638), float16_t(0.1521), float16_t(0.1518), float16_t(0.1365), float16_t(0.142), float16_t(0.123), float16_t(0.134), float16_t(0.113), float16_t(0.124), float16_t(0.1), float16_t(0.116), float16_t(0.089), float16_t(0.109), float16_t(0.079), float16_t(0.104), float16_t(0.07), float16_t(0.097), float16_t(0.062), float16_t(0.0903846), float16_t(0.0541085), float16_t(0.0839627), float16_t(0.0464478), float16_t(0.0777182), float16_t(0.0389987), float16_t(0.0716372), float16_t(0.0317447), float16_t(0.31006), float16_t(0.31616), float16_t(0.2847), float16_t(0.2942), float16_t(0.26), float16_t(0.272), float16_t(0.2365), float16_t(0.2488), float16_t(0.2157), float16_t(0.2278), float16_t(0.1968), float16_t(0.2078), float16_t(0.1793), float16_t(0.1894), float16_t(0.1642), float16_t(0.1728), float16_t(0.1495), float16_t(0.1559), float16_t(0.1363), float16_t(0.141), float16_t(0.124), float16_t(0.128), float16_t(0.114), float16_t(0.116), float16_t(0.103), float16_t(0.104), float16_t(0.092228), float16_t(0.0929626), float16_t(0.0819641), float16_t(0.0824459), float16_t(0.0721425), float16_t(0.0723825), float16_t(0.0627107), float16_t(0.0627184), float16_t(0.0536256), float16_t(0.0534094), float16_t(0.0448515), float16_t(0.0444192), float16_t(0.0363585), float16_t(0.035717), float16_t(0.0281212), float16_t(0.0272769), };

float
xy_to_monotone_hue_angle(vec2 xy)
{
  // the colours in the chart go clockwise, the angle will go counter clockwise, hence the sign.
  // also we subtract the angle of hue index==0 so the output will start at zero and grow monotonically.
  // this is required for the binary search to work correctly.
  const vec2 illC = vec2(0.31006,	0.31616);
  return mod(2.0*M_PI-2.52-atan(xy.y-illC.y, xy.x-illC.x), 2.0*M_PI);
}


vec2
munsell_lookup(
    int hue_idx,
    int chroma_idx)
{
  hue_idx    = (hue_idx % munsell_hdim + munsell_hdim) % munsell_hdim; // unsigned modulo
  chroma_idx = clamp(chroma_idx, 0, munsell_cdim-1);                   // clamp to range
  return vec2(
      munsell_xy[2*(munsell_cdim * hue_idx + chroma_idx) + 0],
      munsell_xy[2*(munsell_cdim * hue_idx + chroma_idx) + 1]);
}

// compute which side of a line v0--v1 the point p lies
float
munsell_side(
    vec2 v0,
    vec2 v1,
    vec2 p)
{
  v1 -= v0; p -= v0;
  return v1.x * p.y - v1.y * p.x;
}

// forward method, interpolate same two triangles as the other direction
vec2
munsell_to_xy(const vec2 mhc) // 2d munsell coordinate: hue and chroma
{
  float hm = mhc.x * munsell_hdim;
  float cm = mhc.y * munsell_cdim;
  int hidxm = int(hm);
  int cidxm = int(cm);
  float hu = hm - hidxm;
  float cu = cm - cidxm;
  vec2 res0, res1, res2, res3;
  res3 = munsell_lookup(hidxm, cidxm+1); res2 = munsell_lookup(hidxm+1, cidxm+1);
  res0 = munsell_lookup(hidxm, cidxm  ); res1 = munsell_lookup(hidxm+1, cidxm);
  //  cu = 1
  //    3---2
  // t1 |  /|                    01  11
  //    |/  | t0
  //    0---1  hu = 1            00  10
  if(hu >= cu) // triangle 0
    return (1-hu) * res0 + (hu-cu) * res1 + (cu) * res2;
  else // t1
    return (hu) * res2 + (cu-hu) * res3 + (1-cu) * res0;
}

// inversion method
// convert xy to polar around illuminant (C)
// find matching munsell box and interpolate the corners
vec2
munsell_from_xy(const vec2 xy)
{
  int hidxm = 0, hidxM = munsell_hdim;
  int cidxm = 0, cidxM = munsell_cdim-1;
  const vec2 illC = vec2(0.31006,	0.31616);
  const float theta = xy_to_monotone_hue_angle(xy);
  const float rad2  = dot(xy-illC,xy-illC);
  while(true)
  { // quad tree refinement step using midpoint
    int hidx = (hidxm + hidxM)/2;
    int cidx = (cidxm + cidxM)/2;
    vec2 res = munsell_lookup(hidx, cidx);
    float th = xy_to_monotone_hue_angle(res);
    float r2 = dot(res-illC,res-illC);
    if(th <= theta) hidxm = hidx;
    else            hidxM = hidx;
    if(r2 <= rad2)  cidxm = cidx;
    else            cidxM = cidx;
    if(hidxM <= hidxm + 1 && cidxM <= cidxm + 1) // reached last level/resolution limit
      break;
  }

  // now we reached the leaf level and may have found our quad.
  // unfortunately the quad tree is just very approximate, so maybe
  // we'll be outside the quad. in this case, we'll walk the grid
  // a bit until we find a containing quad.
  while(true)
  {
    vec2 res0, res1, res2, res3;
    // this polygon winds ccw:
    res3 = munsell_lookup(hidxm, cidxm+1); res2 = munsell_lookup(hidxm+1, cidxm+1);
    res0 = munsell_lookup(hidxm, cidxm  ); res1 = munsell_lookup(hidxm+1, cidxm);
    // these are all positive if xy is inside the polygon
    float s0 = munsell_side(res0, res1, xy), s1 = munsell_side(res1, res2, xy);
    float s2 = munsell_side(res2, res3, xy), s3 = munsell_side(res3, res0, xy);
    // step to next cells
    if     (s0 < 0 && cidxm > 0) cidxm--;
    else if(s0 < 0 && cidxm == 0) hidxm = ((hidxm + munsell_hdim/2) % munsell_hdim + munsell_hdim) % munsell_hdim; // other side of white
    else if(s2 < 0 && cidxm < munsell_cdim-2) cidxm++;
    if     (s1 < 0) hidxm++;
    else if(s3 < 0) hidxm--;
    if(s0 >= 0 && s1 >= 0 && s3 >= 0 && (s2 >= 0 || cidxm >= munsell_cdim-2))
    { // yay we're inside our quad!
      float t0 = munsell_side(res0, res1, res2); // size of triangle 0
      float t1 = munsell_side(res2, res3, res0); // size of triangle 1
      float u0, u1, u2, u3;
      if(cidxm > 0 && s0 + s1 <= t0)
      { // triangle 0
        u2 = s0 / t0;
        u0 = s1 / t0;
        u1 = 1.0-u0-u2;
        u3 = 0.0;
      }
      else
      { // triangle 1
        u2 = s3 / t1;
        u0 = s2 / t1;
        u3 = 1.0-u0-u2;
        u1 = 0.0;
      }
      // now interpolate grid corner coordinates via these barycentrics:
      float hi = u0 * hidxm + u1 * (hidxm+1.0) + u2 * (hidxm+1.0) + u3 *  hidxm;
      float ci = u0 * cidxm + u1 *  cidxm      + u2 * (cidxm+1.0) + u3 * (cidxm+1.0);
      return vec2(hi/munsell_hdim, ci/munsell_cdim);
    }
  }
}


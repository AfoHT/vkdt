#version 460
#extension GL_GOOGLE_include_directive    : enable
#extension GL_EXT_nonuniform_qualifier    : enable

#include "shared.glsl"

layout(local_size_x = 32, local_size_y = 32, local_size_z = 1) in;

// global uniform stuff about image and roi
layout(std140, set = 0, binding = 0) uniform params_t
{
  roi_t ri;
  roi_t ro;
  float contrast;
  float radius;
  float epsilon;
} params;


layout( // input f32 buffer rgb original image
    set = 1, binding = 0
) uniform sampler2D img_in;

layout( // input f32 buffer blurred ab
    set = 1, binding = 1
) uniform sampler2D img_ab;

layout( // output f32 buffer rgba
    set = 1, binding = 2, rgba32f
) uniform image2D img_out;

// final guided filter kernel:
// output = mean_a * I + mean_b
void
main()
{
  ivec2 ipos = ivec2(gl_GlobalInvocationID);
  if(any(greaterThanEqual(ipos, params.ro.roi))) return;

  vec3 rgb = texelFetch(img_in, ipos, 0).rgb;
  vec2 ab = texelFetch(img_ab, ipos, 0).rg;
  imageStore(img_out, ipos, vec4(ab.r * rgb + ab.g, 1.0));
}


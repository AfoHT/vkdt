#version 460
#extension GL_GOOGLE_include_directive    : enable
#extension GL_EXT_nonuniform_qualifier    : enable

#include "shared.glsl"

layout(local_size_x = 32, local_size_y = 32, local_size_z = 1) in;

// global uniform stuff about image and roi
layout(std140, set = 0, binding = 0) uniform params_t
{
  roi_t ri;
  roi_t ro;
} params;

layout( // input buffer rgba
    set = 1, binding = 0
) uniform sampler2D img_in;

layout( // output buffer rgba
    set = 1, binding = 1
) uniform writeonly image2D img_out;

void
main()
{
  ivec2 ipos = ivec2(gl_GlobalInvocationID);
  if(any(greaterThanEqual(ipos, params.ro.roi))) return;

  float lum = texelFetch(img_in, ipos, 0).r;
  // apply srgb tone curve
  lum = lum <= 0.0031308 ? lum * 12.92 : pow(lum, 1.0/2.4)*(1+0.055)-0.055;
  imageStore(img_out, ipos, vec4(vec3(lum), 1.0));
}
